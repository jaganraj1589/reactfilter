{"version":3,"sources":["component/cards.js","component/category.js","layout/header.js","layout/footer.js","layout/index.js","home/index.js","detail/index.js","app/App.js","serviceWorker.js","index.js"],"names":["Events","props","this","events","loading","error","months","appfilter","length","map","data","date","start_date","split","dateMonth","console","log","dateSplit","parseInt","getdateMonth","className","href","style","backgroundImage","assets","src","name","display_date","start_time","end_time","district","Component","Category","filter","colors","backgroundColor","id","onClick","e","Header","Footer","Layout","children","Home","categories","isLoading","initialEvents","appFilter","Detail","App","state","setState","fetch","then","response","json","message","catch","exact","path","filterEvent","district_id","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d327f1af.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./cards.less\";\r\nimport App from \"../app/App\";\r\n\r\nclass Events extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    const { events, loading, error, appfilter  } = this.props;\r\n   const months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"]\r\n  //  const eventDate = events.data.start_date.map(e => split(''))\r\n    const colors = [\"bisque\", \"aliceblue\", \"violet\", \"aqua\", \"tomato\"]\r\n  const getdateMonth = (date) => {\r\n    console.log(date.split(\"-\"))\r\n    let dateSplit = date.split(\"-\")\r\n    let mon = months[parseInt(dateSplit[1] - 1)]\r\n    return mon;\r\n  }\r\n\r\n    if (loading) {\r\n      return <p>Loading ... </p>;\r\n    }\r\n    if (error) {\r\n      return <p>not loaded</p>;\r\n    }\r\n\r\n    \r\n    return (\r\n      <>      \r\n        {events.length > 1 &&\r\n          events.map(data => {\r\n            const date = data.start_date.split(\"-\")[2]\r\n            \r\n            const dateMonth = getdateMonth(data.start_date)\r\n            return(\r\n              <div className=\"eventList\">\r\n              <a href=\"/\" className=\"eventLink\"></a>\r\n              <figure\r\n                style={{ backgroundImage: `url(${data.assets[0].src})` }}\r\n              ></figure>\r\n              {/* {console.log(data.start_date)*/}\r\n              {console.log(data)} }\r\n              <div className=\"detail\">\r\n                <div className=\"startDate\">\r\n                  <h2>\r\n                    {dateMonth}\r\n                    <strong>{date}</strong>\r\n                  </h2>\r\n                  \r\n                </div>\r\n                <div className=\"info\">\r\n                  <h3>{data.name}</h3>\r\n                  <span>{data.display_date}</span>\r\n                  <span>\r\n                    {data.start_time} - {data.end_time}\r\n                  </span>\r\n                  <span>{data.district}</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            )\r\n            \r\n          })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Events;\r\n","import React, { Component } from \"react\";\r\nimport \"./cards.less\";\r\n\r\nclass Category extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    const { filter, loading, appfilter, error } = this.props;\r\n    const colors = [\"rgb(253, 217, 0)\", \"rgb(149, 201, 61)\", \"rgb(4, 178, 226)\", \"rgb(179, 30, 140)\", \"rgb(238, 137, 34)\"]\r\n    \r\n    if (loading) {\r\n      return <p>loading...</p>;\r\n    }\r\n    if (error) {\r\n      return <p>Not loaded</p>;\r\n    }\r\n    return (\r\n      <>\r\n        {filter.length > 1 &&\r\n          filter.map(data => (\r\n            <li style={{backgroundColor: colors[data.id - 1]}} onClick={e => appfilter(data.id)}>{data.name}</li>\r\n          ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Category;\r\n","import React, {Component} from 'react';\r\n\r\nimport \"../component/cards.less\";\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render () {\r\n\r\n    return (\r\n      <header>\r\n        <div className=\"contentArea\">\r\n          <a href=\"/\" className=\"logo\"></a>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport \"../component/cards.less\";\r\nclass Footer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render () {\r\n\r\n    return (\r\n      <footer>footer</footer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport Header from './header';\r\nimport Footer from './footer';\r\n\r\nclass Layout extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render () {\r\n    return (\r\n      <>\r\n        <Header />\r\n          {this.props.children} \r\n        <Footer />\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Layout;","import React, {Component} from 'react';\r\nimport Events from \"../component/cards.js\";\r\nimport Category from \"../component/category.js\";\r\nimport \"../app/App.less\";\r\n\r\nclass Home extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render () {\r\n    const { categories, isLoading, events, initialEvents, error, appFilter } = this.props;\r\n    \r\n    return (\r\n      <div className=\"homePage\">\r\n          <section className=\"filtersBlock\">\r\n            <div className=\"filterBox\">\r\n              <div className=\"contentArea\">\r\n                <div className=\"districtFilter\">\r\n                  <ul>\r\n                    <Category\r\n                      filter={categories}\r\n                      loading={isLoading}\r\n                      appfilter={appFilter}\r\n                    />\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"eventsBlock\">\r\n            <div className=\"contentArea\">\r\n              <div className=\"eventsWrap\">\r\n                <Events events={events} loading={isLoading} error={error} />\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\n\r\nclass Detail extends Component{\r\n  constructor(props){\r\n    super(props)\r\n  }\r\n  render(){\r\n    return (\r\n      <div>Detail</div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Detail;","import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport \"./App.less\";\nimport Events from \"../component/cards.js\";\nimport Category from \"../component/category.js\";\nimport Layout from \"../layout\";\nimport Home from \"../home\";\nimport Detail from \"../detail\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      isLoading: false,\n      error: null,\n      data: null,\n      events: []\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n    fetch(\n      \"https://abu-dhabi-moments-staging.eu-staging.kacdn.net/api/event_districts?lang=en_US\"\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        this.setState({\n          categories: data.message,\n          isLoading: false\n        });\n      })\n\n      .catch(error => {\n        this.setState({\n          error: true,\n          isLoading: false\n        });\n      });\n    //\n    fetch(\n      \"https://abu-dhabi-moments-staging.eu-staging.kacdn.net/api/events?lang=en_US\"\n    )\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        // console.log(data.events);\n        this.setState({\n          initialEvents : data.events,\n          events: data.events,\n          isLoading: false\n        });\n      })\n      .catch(error =>\n        this.setState({\n          error: true,\n          isLoading: false\n        })\n      );\n  }\n\n  render() {\n    const { categories, isLoading, events, initialEvents, error } = this.state;\n    const appFilter = id => {\n      console.log(id);\n      let filterEvent = initialEvents.filter( function (data) {\n        return data.district_id === id        \n       });\n       this.setState({\n         events : filterEvent\n       })\n    };\n    return (\n      <div className=\"App \">\n        <Layout>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\"><Home categories={categories} isLoading={isLoading} events={events} initialEvents={initialEvents} error={error} appFilter={appFilter}/></Route>\n              <Route  path=\"/:slug\"><Detail/></Route>\n            </Switch>\n          </Router>\n        </Layout>\n        {/*  */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}